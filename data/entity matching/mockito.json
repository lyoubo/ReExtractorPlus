{
  "results": [
    {
      "repository": "https://github.com/mockito/mockito.git",
      "sha1": "917352266b61870c47a7da97965778f0288d50cb",
      "url": "https://github.com/mockito/mockito/commit/917352266b61870c47a7da97965778f0288d50cb",
      "commonMatching": [
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.MockitoCore",
            "type": "Method",
            "name": "mock",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 77,
            "endLine": 91,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.MockitoCore",
            "type": "Method",
            "name": "mock",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 73,
            "endLine": 87,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.MockitoCore",
            "type": "Method",
            "name": "mockStatic",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 124,
            "endLine": 138,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.MockitoCore",
            "type": "Method",
            "name": "mockStatic",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 89,
            "endLine": 104,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.MockitoCore",
            "type": "Class",
            "name": "MockitoCore",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 70,
            "endLine": 352,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.MockitoCore",
            "type": "Class",
            "name": "MockitoCore",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 67,
            "endLine": 325,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.DefaultMockitoPlugins",
            "type": "Initializer",
            "name": "static",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java",
            "startLine": 35,
            "endLine": 74,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.DefaultMockitoPlugins",
            "type": "Initializer",
            "name": "static",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java",
            "startLine": 35,
            "endLine": 74,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.DefaultMockitoPlugins",
            "type": "Class",
            "name": "DefaultMockitoPlugins",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java",
            "startLine": 24,
            "endLine": 123,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.DefaultMockitoPlugins",
            "type": "Class",
            "name": "DefaultMockitoPlugins",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java",
            "startLine": 24,
            "endLine": 123,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.PluginRegistry",
            "type": "Class",
            "name": "PluginRegistry",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/PluginRegistry.java",
            "startLine": 18,
            "endLine": 134,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.PluginRegistry",
            "type": "Class",
            "name": "PluginRegistry",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/PluginRegistry.java",
            "startLine": 20,
            "endLine": 138,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.Plugins",
            "type": "Class",
            "name": "Plugins",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/Plugins.java",
            "startLine": 19,
            "endLine": 109,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.Plugins",
            "type": "Class",
            "name": "Plugins",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/Plugins.java",
            "startLine": 21,
            "endLine": 114,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.creation.MockSettingsImpl",
            "type": "Method",
            "name": "validatedSettings",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 270,
            "endLine": 291,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.creation.MockSettingsImpl",
            "type": "Method",
            "name": "validatedSettings",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 271,
            "endLine": 290,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.creation.MockSettingsImpl",
            "type": "Method",
            "name": "validatedStaticSettings",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 293,
            "endLine": 313,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.creation.MockSettingsImpl",
            "type": "Method",
            "name": "validatedStaticSettings",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 292,
            "endLine": 309,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.creation.MockSettingsImpl",
            "type": "Class",
            "name": "MockSettingsImpl",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 41,
            "endLine": 322,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.creation.MockSettingsImpl",
            "type": "Class",
            "name": "MockSettingsImpl",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 42,
            "endLine": 327,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.creation.settings.CreationSettings",
            "type": "Method",
            "name": "CreationSettings",
            "filePath": "src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "startLine": 55,
            "endLine": 76,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.creation.settings.CreationSettings",
            "type": "Method",
            "name": "CreationSettings",
            "filePath": "src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "startLine": 57,
            "endLine": 79,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.creation.settings.CreationSettings",
            "type": "Class",
            "name": "CreationSettings",
            "filePath": "src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "startLine": 25,
            "endLine": 201,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.creation.settings.CreationSettings",
            "type": "Class",
            "name": "CreationSettings",
            "filePath": "src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "startLine": 26,
            "endLine": 213,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.util.MockNameImpl",
            "type": "Class",
            "name": "MockNameImpl",
            "filePath": "src/main/java/org/mockito/internal/util/MockNameImpl.java",
            "startLine": 11,
            "endLine": 59,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.util.MockNameImpl",
            "type": "Class",
            "name": "MockNameImpl",
            "filePath": "src/main/java/org/mockito/internal/util/MockNameImpl.java",
            "startLine": 12,
            "endLine": 60,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.mock.MockCreationSettings",
            "type": "Interface",
            "name": "MockCreationSettings",
            "filePath": "src/main/java/org/mockito/mock/MockCreationSettings.java",
            "startLine": 20,
            "endLine": 154,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.mock.MockCreationSettings",
            "type": "Interface",
            "name": "MockCreationSettings",
            "filePath": "src/main/java/org/mockito/mock/MockCreationSettings.java",
            "startLine": 20,
            "endLine": 162,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.plugins.DoNotMockEnforcer",
            "type": "Interface",
            "name": "DoNotMockEnforcer",
            "filePath": "src/main/java/org/mockito/plugins/DoNotMockEnforcer.java",
            "startLine": 7,
            "endLine": 23,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.plugins.DoNotMockEnforcer",
            "type": "Interface",
            "name": "DoNotMockEnforcer",
            "filePath": "src/main/java/org/mockito/plugins/DoNotMockEnforcer.java",
            "startLine": 13,
            "endLine": 99,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheNameForClass",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 14,
            "endLine": 20,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheNameForClass",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 15,
            "endLine": 21,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheNameForClassOnStaticMock",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 22,
            "endLine": 28,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheNameForClassOnStaticMock",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 23,
            "endLine": 29,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheNameForAnonymousClass",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 30,
            "endLine": 38,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheNameForAnonymousClass",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 31,
            "endLine": 40,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheNameForAnonymousClassOnStatic",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 40,
            "endLine": 48,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheNameForAnonymousClassOnStatic",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 42,
            "endLine": 51,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheGivenName",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 50,
            "endLine": 56,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheGivenName",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 53,
            "endLine": 59,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheGivenNameOnStatic",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 58,
            "endLine": 64,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Method",
            "name": "shouldProvideTheGivenNameOnStatic",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 61,
            "endLine": 67,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Class",
            "name": "MockNameImplTest",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 12,
            "endLine": 69,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.util.MockNameImplTest",
            "type": "Class",
            "name": "MockNameImplTest",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 13,
            "endLine": 72,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockitousage.annotation.DoNotMockTest",
            "type": "Class",
            "name": "DoNotMockTest",
            "filePath": "src/test/java/org/mockitousage/annotation/DoNotMockTest.java",
            "startLine": 16,
            "endLine": 133,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockitousage.annotation.DoNotMockTest",
            "type": "Class",
            "name": "DoNotMockTest",
            "filePath": "src/test/java/org/mockitousage/annotation/DoNotMockTest.java",
            "startLine": 18,
            "endLine": 206,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockitousage.plugins.donotmockenforcer.DoNotmockEnforcerTest",
            "type": "Class",
            "name": "DoNotmockEnforcerTest",
            "filePath": "subprojects/extTest/src/test/java/org/mockitousage/plugins/donotmockenforcer/DoNotmockEnforcerTest.java",
            "startLine": 14,
            "endLine": 44,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockitousage.plugins.donotmockenforcer.DoNotmockEnforcerTest",
            "type": "Class",
            "name": "DoNotmockEnforcerTest",
            "filePath": "subprojects/extTest/src/test/java/org/mockitousage/plugins/donotmockenforcer/DoNotmockEnforcerTest.java",
            "startLine": 17,
            "endLine": 97,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockitousage.plugins.donotmockenforcer.MyDoNotMockEnforcer",
            "type": "Method",
            "name": "checkTypeForDoNotMockViolation",
            "filePath": "subprojects/extTest/src/test/java/org/mockitousage/plugins/donotmockenforcer/MyDoNotMockEnforcer.java",
            "startLine": 11,
            "endLine": 21,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockitousage.plugins.donotmockenforcer.MyDoNotMockEnforcer",
            "type": "Method",
            "name": "checkTypeForDoNotMockViolation",
            "filePath": "subprojects/extTest/src/test/java/org/mockitousage/plugins/donotmockenforcer/MyDoNotMockEnforcer.java",
            "startLine": 13,
            "endLine": 27,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockitousage.plugins.donotmockenforcer.MyDoNotMockEnforcer",
            "type": "Class",
            "name": "MyDoNotMockEnforcer",
            "filePath": "subprojects/extTest/src/test/java/org/mockitousage/plugins/donotmockenforcer/MyDoNotMockEnforcer.java",
            "startLine": 9,
            "endLine": 22,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockitousage.plugins.donotmockenforcer.MyDoNotMockEnforcer",
            "type": "Class",
            "name": "MyDoNotMockEnforcer",
            "filePath": "subprojects/extTest/src/test/java/org/mockitousage/plugins/donotmockenforcer/MyDoNotMockEnforcer.java",
            "startLine": 11,
            "endLine": 43,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.PluginRegistry",
            "type": "Method",
            "name": "getDoNotMockEnforcer",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/PluginRegistry.java",
            "startLine": 116,
            "endLine": 124,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.PluginRegistry",
            "type": "Method",
            "name": "getDoNotMockEnforcer",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/PluginRegistry.java",
            "startLine": 120,
            "endLine": 128,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.PluginRegistry",
            "type": "Field",
            "name": "doNotMockEnforcer",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/PluginRegistry.java",
            "startLine": 49,
            "endLine": 50,
            "startColumn": 37,
            "endColumn": 79
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.PluginRegistry",
            "type": "Field",
            "name": "doNotMockEnforcer",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/PluginRegistry.java",
            "startLine": 51,
            "endLine": 54,
            "startColumn": 45,
            "endColumn": 99
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.util.MockNameImpl",
            "type": "Method",
            "name": "MockNameImpl",
            "filePath": "src/main/java/org/mockito/internal/util/MockNameImpl.java",
            "startLine": 17,
            "endLine": 25,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.util.MockNameImpl",
            "type": "Method",
            "name": "MockNameImpl",
            "filePath": "src/main/java/org/mockito/internal/util/MockNameImpl.java",
            "startLine": 18,
            "endLine": 26,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.MockitoCore",
            "type": "Field",
            "name": "DO_NOT_MOCK_ENFORCER",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 73,
            "endLine": 73,
            "startColumn": 44,
            "endColumn": 97
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.MockitoCore",
            "type": "Field",
            "name": "DO_NOT_MOCK_ENFORCER",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 70,
            "endLine": 71,
            "startColumn": 52,
            "endColumn": 43
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.Plugins",
            "type": "Method",
            "name": "getDoNotMockEnforcer",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/Plugins.java",
            "startLine": 98,
            "endLine": 106,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.configuration.plugins.Plugins",
            "type": "Method",
            "name": "getDoNotMockEnforcer",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/Plugins.java",
            "startLine": 102,
            "endLine": 111,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public mock(typeToMock Class<T>, settings MockSettings) : T",
            "type": "Statement",
            "name": "checkDoNotMockAnnotation(creationSettings.getTypeToMock(),creationSettings);\n",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 87,
            "endLine": 87,
            "startColumn": 9,
            "endColumn": 86
          },
          "rightSideLocation": {
            "container": "public mock(typeToMock Class<T>, settings MockSettings) : T",
            "type": "Statement",
            "name": "checkDoNotMockAnnotation(creationSettings);\n",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 83,
            "endLine": 83,
            "startColumn": 9,
            "endColumn": 52
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "initializer",
            "type": "Statement",
            "name": "DEFAULT_PLUGINS.put(DoNotMockEnforcer.class.getName(),\"org.mockito.internal.configuration.DefaultDoNotMockEnforcer\");\n",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java",
            "startLine": 64,
            "endLine": 66,
            "startColumn": 9,
            "endColumn": 80
          },
          "rightSideLocation": {
            "container": "initializer",
            "type": "Statement",
            "name": "DEFAULT_PLUGINS.put(DoNotMockEnforcerWithType.class.getName(),\"org.mockito.internal.configuration.DefaultDoNotMockEnforcer\");\n",
            "filePath": "src/main/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java",
            "startLine": 64,
            "endLine": 66,
            "startColumn": 9,
            "endColumn": 80
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "private validatedSettings(typeToMock Class<T>, source CreationSettings<T>) : CreationSettings<T>",
            "type": "Statement",
            "name": "CreationSettings<T> settings=new CreationSettings<T>(source);\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 286,
            "endLine": 286,
            "startColumn": 9,
            "endColumn": 72
          },
          "rightSideLocation": {
            "container": "private validatedSettings(typeToMock Class<T>, source CreationSettings<T>) : CreationSettings<T>",
            "type": "Statement",
            "name": "CreationSettings<T> settings=buildCreationSettings(typeToMock,source,MockType.INSTANCE);\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 287,
            "endLine": 287,
            "startColumn": 9,
            "endColumn": 101
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "private validatedSettings(typeToMock Class<T>, source CreationSettings<T>) : CreationSettings<T>",
            "type": "Statement",
            "name": "settings.setTypeToMock(typeToMock);\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 288,
            "endLine": 288,
            "startColumn": 9,
            "endColumn": 44
          },
          "rightSideLocation": {
            "container": "private buildCreationSettings(classToMock Class<T>, source CreationSettings<T>, mockType MockType) : CreationSettings<T>",
            "type": "Statement",
            "name": "settings.setTypeToMock(classToMock);\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 315,
            "endLine": 315,
            "startColumn": 9,
            "endColumn": 45
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "private validatedSettings(typeToMock Class<T>, source CreationSettings<T>) : CreationSettings<T>",
            "type": "Statement",
            "name": "settings.setMockName(new MockNameImpl(source.getName(),typeToMock,false));\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 287,
            "endLine": 287,
            "startColumn": 9,
            "endColumn": 85
          },
          "rightSideLocation": {
            "container": "private buildCreationSettings(classToMock Class<T>, source CreationSettings<T>, mockType MockType) : CreationSettings<T>",
            "type": "Statement",
            "name": "settings.setMockName(new MockNameImpl(source.getName(),classToMock,mockType));\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 314,
            "endLine": 314,
            "startColumn": 9,
            "endColumn": 89
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "private validatedStaticSettings(classToMock Class<T>, source CreationSettings<T>) : CreationSettings<T>",
            "type": "Statement",
            "name": "CreationSettings<T> settings=new CreationSettings<T>(source);\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 309,
            "endLine": 309,
            "startColumn": 9,
            "endColumn": 72
          },
          "rightSideLocation": {
            "container": "private buildCreationSettings(classToMock Class<T>, source CreationSettings<T>, mockType MockType) : CreationSettings<T>",
            "type": "Statement",
            "name": "CreationSettings<T> settings=new CreationSettings<>(source);\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 313,
            "endLine": 313,
            "startColumn": 9,
            "endColumn": 71
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "private validatedStaticSettings(classToMock Class<T>, source CreationSettings<T>) : CreationSettings<T>",
            "type": "Statement",
            "name": "settings.setMockName(new MockNameImpl(source.getName(),classToMock,true));\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 310,
            "endLine": 310,
            "startColumn": 9,
            "endColumn": 85
          },
          "rightSideLocation": {
            "container": "private buildCreationSettings(classToMock Class<T>, source CreationSettings<T>, mockType MockType) : CreationSettings<T>",
            "type": "Statement",
            "name": "settings.setMockName(new MockNameImpl(source.getName(),classToMock,mockType));\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 314,
            "endLine": 314,
            "startColumn": 9,
            "endColumn": 89
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldProvideTheNameForClass() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(null,SomeClass.class,false).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 17,
            "endLine": 17,
            "startColumn": 9,
            "endColumn": 81
          },
          "rightSideLocation": {
            "container": "public shouldProvideTheNameForClass() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(null,SomeClass.class,MockType.INSTANCE).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 18,
            "endLine": 18,
            "startColumn": 9,
            "endColumn": 93
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldProvideTheNameForClassOnStaticMock() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(null,SomeClass.class,true).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 25,
            "endLine": 25,
            "startColumn": 9,
            "endColumn": 80
          },
          "rightSideLocation": {
            "container": "public shouldProvideTheNameForClassOnStaticMock() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(null,SomeClass.class,MockType.STATIC).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 26,
            "endLine": 26,
            "startColumn": 9,
            "endColumn": 91
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldProvideTheNameForAnonymousClass() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(null,anonymousInstance.getClass(),false).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 35,
            "endLine": 35,
            "startColumn": 9,
            "endColumn": 94
          },
          "rightSideLocation": {
            "container": "public shouldProvideTheNameForAnonymousClass() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(null,anonymousInstance.getClass(),MockType.INSTANCE).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 36,
            "endLine": 37,
            "startColumn": 9,
            "endColumn": 100
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldProvideTheNameForAnonymousClassOnStatic() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(null,anonymousInstance.getClass(),true).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 45,
            "endLine": 45,
            "startColumn": 9,
            "endColumn": 93
          },
          "rightSideLocation": {
            "container": "public shouldProvideTheNameForAnonymousClassOnStatic() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(null,anonymousInstance.getClass(),MockType.STATIC).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 47,
            "endLine": 48,
            "startColumn": 9,
            "endColumn": 98
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldProvideTheGivenName() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(\"The Hulk\",SomeClass.class,false).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 53,
            "endLine": 53,
            "startColumn": 9,
            "endColumn": 87
          },
          "rightSideLocation": {
            "container": "public shouldProvideTheGivenName() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(\"The Hulk\",SomeClass.class,MockType.INSTANCE).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 56,
            "endLine": 56,
            "startColumn": 9,
            "endColumn": 99
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldProvideTheGivenNameOnStatic() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(\"The Hulk\",SomeClass.class,true).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 61,
            "endLine": 61,
            "startColumn": 9,
            "endColumn": 86
          },
          "rightSideLocation": {
            "container": "public shouldProvideTheGivenNameOnStatic() : void",
            "type": "Statement",
            "name": "String name=new MockNameImpl(\"The Hulk\",SomeClass.class,MockType.STATIC).toString();\n",
            "filePath": "src/test/java/org/mockito/internal/util/MockNameImplTest.java",
            "startLine": 64,
            "endLine": 64,
            "startColumn": 9,
            "endColumn": 97
          },
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.MockitoCore",
            "type": "Method",
            "name": "checkDoNotMockAnnotationForType",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 101,
            "endLine": 122,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.MockitoCore",
            "type": "Method",
            "name": "checkDoNotMockAnnotation",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 106,
            "endLine": 111,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": false
        },
        {
          "leftSideLocation": {
            "container": "public MockNameImpl(mockName String, type Class<?>, mockedStatic boolean)",
            "type": "Statement",
            "name": "this.mockName=mockedStatic ? toClassName(type) : toInstanceName(type);\n",
            "filePath": "src/main/java/org/mockito/internal/util/MockNameImpl.java",
            "startLine": 20,
            "endLine": 20,
            "startColumn": 13,
            "endColumn": 85
          },
          "rightSideLocation": {
            "container": "public MockNameImpl(mockName String, type Class<?>, mockType MockType)",
            "type": "Statement",
            "name": "this.mockName=mockType == MockType.STATIC ? toClassName(type) : toInstanceName(type);\n",
            "filePath": "src/main/java/org/mockito/internal/util/MockNameImpl.java",
            "startLine": 21,
            "endLine": 21,
            "startColumn": 13,
            "endColumn": 100
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "private checkDoNotMockAnnotationForType(type Class<?>) : void",
            "type": "Statement",
            "name": "if(warning != null)",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 112,
            "endLine": 114,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "container": "private checkDoNotMockAnnotation(creationSettings MockCreationSettings<?>) : void",
            "type": "Statement",
            "name": "if(warning != null)",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 108,
            "endLine": 110,
            "startColumn": 9,
            "endColumn": 10
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "private checkDoNotMockAnnotationForType(type Class<?>) : void",
            "type": "Statement",
            "name": "throw new DoNotMockException(warning);\n",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 113,
            "endLine": 113,
            "startColumn": 13,
            "endColumn": 51
          },
          "rightSideLocation": {
            "container": "private checkDoNotMockAnnotation(creationSettings MockCreationSettings<?>) : void",
            "type": "Statement",
            "name": "throw new DoNotMockException(warning);\n",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 109,
            "endLine": 109,
            "startColumn": 13,
            "endColumn": 51
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "private checkDoNotMockAnnotationForType(type Class<?>) : void",
            "type": "Statement",
            "name": "String warning=DO_NOT_MOCK_ENFORCER.checkTypeForDoNotMockViolation(type);\n",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 111,
            "endLine": 111,
            "startColumn": 9,
            "endColumn": 84
          },
          "rightSideLocation": {
            "container": "private checkDoNotMockAnnotation(creationSettings MockCreationSettings<?>) : void",
            "type": "Statement",
            "name": "String warning=DO_NOT_MOCK_ENFORCER.checkTypeForDoNotMockViolation(creationSettings);\n",
            "filePath": "src/main/java/org/mockito/internal/MockitoCore.java",
            "startLine": 107,
            "endLine": 107,
            "startColumn": 9,
            "endColumn": 96
          },
          "validation": true
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "container": "private validatedSettings(typeToMock Class<T>, source CreationSettings<T>) : CreationSettings<T>",
            "type": "Statement",
            "name": "CreationSettings<T> settings=new CreationSettings<T>(source);\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 286,
            "endLine": 286,
            "startColumn": 9,
            "endColumn": 72
          },
          "rightSideLocation": {
            "container": "private buildCreationSettings(classToMock Class<T>, source CreationSettings<T>, mockType MockType) : CreationSettings<T>",
            "type": "Statement",
            "name": "CreationSettings<T> settings=new CreationSettings<>(source);\n",
            "filePath": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "startLine": 313,
            "endLine": 313,
            "startColumn": 9,
            "endColumn": 71
          },
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/mockito/mockito.git",
      "sha1": "a8adbf5027bfc295b002e5d87120e7c0d1229f96",
      "url": "https://github.com/mockito/mockito/commit/a8adbf5027bfc295b002e5d87120e7c0d1229f96",
      "commonMatching": [
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker",
            "type": "Method",
            "name": "InlineDelegateByteBuddyMockMaker",
            "filePath": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java",
            "startLine": 207,
            "endLine": 330,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker",
            "type": "Method",
            "name": "InlineDelegateByteBuddyMockMaker",
            "filePath": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java",
            "startLine": 207,
            "endLine": 328,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker",
            "type": "Class",
            "name": "InlineDelegateByteBuddyMockMaker",
            "filePath": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java",
            "startLine": 44,
            "endLine": 887,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker",
            "type": "Class",
            "name": "InlineDelegateByteBuddyMockMaker",
            "filePath": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java",
            "startLine": 44,
            "endLine": 885,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package InlineDelegateByteBuddyMockMaker()",
            "type": "Statement",
            "name": "if(System.getProperty(\"java.specification.vendor\",\"\").toLowerCase().contains(\"android\"))",
            "filePath": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java",
            "startLine": 210,
            "endLine": 242,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "container": "package InlineDelegateByteBuddyMockMaker()",
            "type": "Statement",
            "name": "if(PlatformUtils.isAndroidPlatform() || PlatformUtils.isProbablyTermuxEnvironment())",
            "filePath": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java",
            "startLine": 210,
            "endLine": 240,
            "startColumn": 13,
            "endColumn": 14
          },
          "validation": true
        }
      ],
      "ourApproach": [],
      "baseline": []
    },
    {
      "repository": "https://github.com/mockito/mockito.git",
      "sha1": "9342e9a15c8a1d0ba9fb0334b5f0b0ed661079f1",
      "url": "https://github.com/mockito/mockito/commit/9342e9a15c8a1d0ba9fb0334b5f0b0ed661079f1",
      "commonMatching": [
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.junit.UnusedStubbingsTest",
            "type": "Method",
            "name": "unused_stubbings",
            "filePath": "src/test/java/org/mockito/internal/junit/UnusedStubbingsTest.java",
            "startLine": 37,
            "endLine": 66,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.junit.UnusedStubbingsTest",
            "type": "Method",
            "name": "unused_stubbings",
            "filePath": "src/test/java/org/mockito/internal/junit/UnusedStubbingsTest.java",
            "startLine": 37,
            "endLine": 70,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockito.internal.junit.UnusedStubbingsTest",
            "type": "Class",
            "name": "UnusedStubbingsTest",
            "filePath": "src/test/java/org/mockito/internal/junit/UnusedStubbingsTest.java",
            "startLine": 21,
            "endLine": 67,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockito.internal.junit.UnusedStubbingsTest",
            "type": "Class",
            "name": "UnusedStubbingsTest",
            "filePath": "src/test/java/org/mockito/internal/junit/UnusedStubbingsTest.java",
            "startLine": 21,
            "endLine": 71,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "org.mockitousage.spies.PartialMockingWithSpiesTest",
            "type": "Class",
            "name": "PartialMockingWithSpiesTest",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 26,
            "endLine": 183,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "org.mockitousage.spies.PartialMockingWithSpiesTest",
            "type": "Class",
            "name": "PartialMockingWithSpiesTest",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 28,
            "endLine": 209,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public unused_stubbings() : void",
            "type": "Statement",
            "name": "assertThat(filterLineNo(logger.getLoggedInfo())).isIn(\"[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\\n\" + \"[MockitoHint] 1. Unused -> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\" + \"[MockitoHint] 2. Unused -> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\",\"[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\\n\" + \"[MockitoHint] 1. Unused -> at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\" + \"[MockitoHint] 2. Unused -> at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\");\n",
            "filePath": "src/test/java/org/mockito/internal/junit/UnusedStubbingsTest.java",
            "startLine": 56,
            "endLine": 65,
            "startColumn": 9,
            "endColumn": 149
          },
          "rightSideLocation": {
            "container": "public unused_stubbings() : void",
            "type": "Statement",
            "name": "assertThat(filterLineNo(logger.getLoggedInfo())).isIn(\"[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\\n\" + \"[MockitoHint] 1. Unused -> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\" + \"[MockitoHint] 2. Unused -> at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\",\"[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\\n\" + \"[MockitoHint] 1. Unused -> at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\" + \"[MockitoHint] 2. Unused -> at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\",\"[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\\n\" + \"[MockitoHint] 1. Unused -> at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:0)\\n\" + \"[MockitoHint] 2. Unused -> at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:0)\\n\");\n",
            "filePath": "src/test/java/org/mockito/internal/junit/UnusedStubbingsTest.java",
            "startLine": 56,
            "endLine": 69,
            "startColumn": 9,
            "endColumn": 170
          },
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "container": "org.mockitousage.spies.PartialMockingWithSpiesTest",
            "type": "Method",
            "name": "shouldStackTraceGetFilteredOnUserExceptionsReflection",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 131,
            "endLine": 153,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "org.mockitousage.spies.PartialMockingWithSpiesTest",
            "type": "Method",
            "name": "shouldStackTraceGetFilteredOnUserExceptionsReflectionForJavaOfVersionLessThan21",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 133,
            "endLine": 156,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflection() : void",
            "type": "Statement",
            "name": "try",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 136,
            "endLine": 152,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflectionForJavaOfVersionLessThan21() : void",
            "type": "Statement",
            "name": "try",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 139,
            "endLine": 155,
            "startColumn": 9,
            "endColumn": 10
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflection() : void",
            "type": "Statement",
            "name": "spy.getNameButDelegateToMethodThatThrows();\n",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 138,
            "endLine": 138,
            "startColumn": 13,
            "endColumn": 56
          },
          "rightSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflectionForJavaOfVersionLessThan21() : void",
            "type": "Statement",
            "name": "spy.getNameButDelegateToMethodThatThrows();\n",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 141,
            "endLine": 141,
            "startColumn": 13,
            "endColumn": 56
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflection() : void",
            "type": "Statement",
            "name": "fail();\n",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 139,
            "endLine": 139,
            "startColumn": 13,
            "endColumn": 20
          },
          "rightSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflectionForJavaOfVersionLessThan21() : void",
            "type": "Statement",
            "name": "fail();\n",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 142,
            "endLine": 142,
            "startColumn": 13,
            "endColumn": 20
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflection() : void",
            "type": "Statement",
            "name": "catch(t)",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 140,
            "endLine": 152,
            "startColumn": 11,
            "endColumn": 10
          },
          "rightSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflectionForJavaOfVersionLessThan21() : void",
            "type": "Statement",
            "name": "catch(t)",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 143,
            "endLine": 155,
            "startColumn": 11,
            "endColumn": 10
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflection() : void",
            "type": "Statement",
            "name": "Assume.assumeThat(Plugins.getMockMaker(),instanceOf(InlineByteBuddyMockMaker.class));\n",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 133,
            "endLine": 133,
            "startColumn": 9,
            "endColumn": 95
          },
          "rightSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflectionForJavaOfVersionLessThan21() : void",
            "type": "Statement",
            "name": "Assume.assumeThat(Plugins.getMockMaker(),instanceOf(InlineByteBuddyMockMaker.class));\n",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 135,
            "endLine": 135,
            "startColumn": 9,
            "endColumn": 95
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflection() : void",
            "type": "Statement",
            "name": "Assume.assumeThat(Plugins.getMemberAccessor(),instanceOf(ReflectionMemberAccessor.class));\n",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 134,
            "endLine": 134,
            "startColumn": 9,
            "endColumn": 100
          },
          "rightSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflectionForJavaOfVersionLessThan21() : void",
            "type": "Statement",
            "name": "Assume.assumeThat(Plugins.getMemberAccessor(),instanceOf(ReflectionMemberAccessor.class));\n",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 136,
            "endLine": 136,
            "startColumn": 9,
            "endColumn": 100
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflection() : void",
            "type": "Statement",
            "name": "Assertions.assertThat(t).has(methodsInStackTrace(\"throwSomeException\",\"invoke0\",\"invoke\",\"invoke\",\"invoke\",\"getNameButDelegateToMethodThatThrows\",\"shouldStackTraceGetFilteredOnUserExceptionsReflection\"));\n",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 142,
            "endLine": 151,
            "startColumn": 13,
            "endColumn": 95
          },
          "rightSideLocation": {
            "container": "public shouldStackTraceGetFilteredOnUserExceptionsReflectionForJavaOfVersionLessThan21() : void",
            "type": "Statement",
            "name": "Assertions.assertThat(t).has(methodsInStackTrace(\"throwSomeException\",\"invoke0\",\"invoke\",\"invoke\",\"invoke\",\"getNameButDelegateToMethodThatThrows\",\"shouldStackTraceGetFilteredOnUserExceptionsReflectionForJavaOfVersionLessThan21\"));\n",
            "filePath": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java",
            "startLine": 145,
            "endLine": 154,
            "startColumn": 13,
            "endColumn": 121
          },
          "validation": true
        }
      ],
      "baseline": []
    }
  ]
}