{
  "results": [
    {
      "repository": "https://github.com/pmd/pmd.git",
      "sha1": "6e0aafbf44ad4070101b103405cda0b33cd9001e",
      "url": "https://github.com/pmd/pmd/commit/6e0aafbf44ad4070101b103405cda0b33cd9001e",
      "commonMatching": [
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtil.ExprPrinter",
            "type": "Class",
            "name": "ExprPrinter",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtil.java",
            "startLine": 251,
            "endLine": 428,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtil.ExprPrinter",
            "type": "Class",
            "name": "ExprPrinter",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtil.java",
            "startLine": 257,
            "endLine": 469,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtil",
            "type": "Class",
            "name": "PrettyPrintingUtil",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtil.java",
            "startLine": 63,
            "endLine": 431,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtil",
            "type": "Class",
            "name": "PrettyPrintingUtil",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtil.java",
            "startLine": 69,
            "endLine": 472,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Method",
            "name": "ppMethodCallArgsTooBig",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 48,
            "endLine": 54,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Method",
            "name": "ppMethodCallArgsTooBig",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 51,
            "endLine": 55,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Method",
            "name": "ppMethodCallOnCast",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 56,
            "endLine": 62,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Method",
            "name": "ppMethodCallOnCast",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 57,
            "endLine": 60,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Method",
            "name": "ppMethodRef",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 64,
            "endLine": 70,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Method",
            "name": "ppMethodRef",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 62,
            "endLine": 65,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Method",
            "name": "ppCtorCall",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 72,
            "endLine": 78,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Method",
            "name": "ppCtorCall",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 67,
            "endLine": 70,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Method",
            "name": "ppMethodRefWithTyArgs",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 80,
            "endLine": 86,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Method",
            "name": "ppMethodRefWithTyArgs",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 72,
            "endLine": 76,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Class",
            "name": "PrettyPrintingUtilTest",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 28,
            "endLine": 101,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.ast.internal.PrettyPrintingUtilTest",
            "type": "Class",
            "name": "PrettyPrintingUtilTest",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 31,
            "endLine": 115,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodCallArgsTooBig() : void",
            "type": "Statement",
            "name": "ASTCompilationUnit root=java.parse(\"class A { { this.foo(\\\"a long string\\\", 12, 12, 12, 12, 12); } }\");\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 50,
            "endLine": 50,
            "startColumn": 9,
            "endColumn": 114
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "ASTCompilationUnit root=java.parse(\"class A { { Object x = \" + expr + \"; } }\");\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 93,
            "endLine": 93,
            "startColumn": 9,
            "endColumn": 90
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodCallArgsTooBig() : void",
            "type": "Statement",
            "name": "@NonNull ASTMethodCall m=root.descendants(ASTMethodCall.class).firstOrThrow();\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 51,
            "endLine": 51,
            "startColumn": 9,
            "endColumn": 89
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "@NonNull T node=root.descendants(nodeTy).firstOrThrow();\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 94,
            "endLine": 94,
            "startColumn": 9,
            "endColumn": 67
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodCallOnCast() : void",
            "type": "Statement",
            "name": "ASTCompilationUnit root=java.parse(\"class A { { ((Object) this).foo(12); } }\");\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 58,
            "endLine": 58,
            "startColumn": 9,
            "endColumn": 90
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "ASTCompilationUnit root=java.parse(\"class A { { Object x = \" + expr + \"; } }\");\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 93,
            "endLine": 93,
            "startColumn": 9,
            "endColumn": 90
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodCallOnCast() : void",
            "type": "Statement",
            "name": "@NonNull ASTMethodCall m=root.descendants(ASTMethodCall.class).firstOrThrow();\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 59,
            "endLine": 59,
            "startColumn": 9,
            "endColumn": 89
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "@NonNull T node=root.descendants(nodeTy).firstOrThrow();\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 94,
            "endLine": 94,
            "startColumn": 9,
            "endColumn": 67
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodRef() : void",
            "type": "Statement",
            "name": "ASTCompilationUnit root=java.parse(\"class A { { foo(ASTW::meth); } }\");\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 66,
            "endLine": 66,
            "startColumn": 9,
            "endColumn": 82
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "ASTCompilationUnit root=java.parse(\"class A { { Object x = \" + expr + \"; } }\");\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 93,
            "endLine": 93,
            "startColumn": 9,
            "endColumn": 90
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodRef() : void",
            "type": "Statement",
            "name": "@NonNull ASTMethodReference m=root.descendants(ASTMethodReference.class).firstOrThrow();\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 67,
            "endLine": 67,
            "startColumn": 9,
            "endColumn": 99
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "@NonNull T node=root.descendants(nodeTy).firstOrThrow();\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 94,
            "endLine": 94,
            "startColumn": 9,
            "endColumn": 67
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppCtorCall() : void",
            "type": "Statement",
            "name": "ASTCompilationUnit root=java.parse(\"class A { { new Foo(1); } }\");\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 74,
            "endLine": 74,
            "startColumn": 9,
            "endColumn": 77
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "ASTCompilationUnit root=java.parse(\"class A { { Object x = \" + expr + \"; } }\");\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 93,
            "endLine": 93,
            "startColumn": 9,
            "endColumn": 90
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppCtorCall() : void",
            "type": "Statement",
            "name": "@NonNull ASTConstructorCall m=root.descendants(ASTConstructorCall.class).firstOrThrow();\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 75,
            "endLine": 75,
            "startColumn": 9,
            "endColumn": 99
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "@NonNull T node=root.descendants(nodeTy).firstOrThrow();\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 94,
            "endLine": 94,
            "startColumn": 9,
            "endColumn": 67
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodRefWithTyArgs() : void",
            "type": "Statement",
            "name": "ASTCompilationUnit root=java.parse(\"class A { { foo(ASTW::<String>meth); } }\");\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 82,
            "endLine": 82,
            "startColumn": 9,
            "endColumn": 90
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "ASTCompilationUnit root=java.parse(\"class A { { Object x = \" + expr + \"; } }\");\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 93,
            "endLine": 93,
            "startColumn": 9,
            "endColumn": 90
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodRefWithTyArgs() : void",
            "type": "Statement",
            "name": "@NonNull ASTMethodReference m=root.descendants(ASTMethodReference.class).firstOrThrow();\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 83,
            "endLine": 83,
            "startColumn": 9,
            "endColumn": 99
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "@NonNull T node=root.descendants(nodeTy).firstOrThrow();\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 94,
            "endLine": 94,
            "startColumn": 9,
            "endColumn": 67
          },
          "validation": true
        }
      ],
      "ourApproach": [],
      "baseline": [
        {
          "leftSideLocation": {
            "container": "package ppMethodCallArgsTooBig() : void",
            "type": "Statement",
            "name": "assertThat(prettyPrint(m),contentEquals(\"this.foo(\\\"a long string\\\", 12...)\"));\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 53,
            "endLine": 53,
            "startColumn": 9,
            "endColumn": 89
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "assertThat(prettyPrint(node),contentEquals(expected));\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 95,
            "endLine": 95,
            "startColumn": 9,
            "endColumn": 64
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodCallOnCast() : void",
            "type": "Statement",
            "name": "assertThat(prettyPrint(m),contentEquals(\"((Object) this).foo(12)\"));\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 61,
            "endLine": 61,
            "startColumn": 9,
            "endColumn": 78
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "assertThat(prettyPrint(node),contentEquals(expected));\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 95,
            "endLine": 95,
            "startColumn": 9,
            "endColumn": 64
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodRef() : void",
            "type": "Statement",
            "name": "assertThat(prettyPrint(m),contentEquals(\"ASTW::meth\"));\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 69,
            "endLine": 69,
            "startColumn": 9,
            "endColumn": 65
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "assertThat(prettyPrint(node),contentEquals(expected));\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 95,
            "endLine": 95,
            "startColumn": 9,
            "endColumn": 64
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppCtorCall() : void",
            "type": "Statement",
            "name": "assertThat(prettyPrint(m),contentEquals(\"new Foo(1)\"));\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 77,
            "endLine": 77,
            "startColumn": 9,
            "endColumn": 65
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "assertThat(prettyPrint(node),contentEquals(expected));\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 95,
            "endLine": 95,
            "startColumn": 9,
            "endColumn": 64
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package ppMethodRefWithTyArgs() : void",
            "type": "Statement",
            "name": "assertThat(prettyPrint(m),contentEquals(\"ASTW::<String>meth\"));\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 85,
            "endLine": 85,
            "startColumn": 9,
            "endColumn": 73
          },
          "rightSideLocation": {
            "container": "private testPrettyPrint(expr String, nodeTy Class<T>, expected String) : void",
            "type": "Statement",
            "name": "assertThat(prettyPrint(node),contentEquals(expected));\n",
            "filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/internal/PrettyPrintingUtilTest.java",
            "startLine": 95,
            "endLine": 95,
            "startColumn": 9,
            "endColumn": 64
          },
          "validation": true
        }
      ]
    },
    {
      "repository": "https://github.com/pmd/pmd.git",
      "sha1": "100e5c7ba26ae8e76f0b0abb30f6187b57f2588d",
      "url": "https://github.com/pmd/pmd/commit/100e5c7ba26ae8e76f0b0abb30f6187b57f2588d",
      "commonMatching": [
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.ExprCheckHelper",
            "type": "Method",
            "name": "groundTargetType",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/ExprCheckHelper.java",
            "startLine": 577,
            "endLine": 592,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.ExprCheckHelper",
            "type": "Method",
            "name": "groundTargetType",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/ExprCheckHelper.java",
            "startLine": 579,
            "endLine": 592,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.ExprCheckHelper",
            "type": "Class",
            "name": "ExprCheckHelper",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/ExprCheckHelper.java",
            "startLine": 41,
            "endLine": 610,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.ExprCheckHelper",
            "type": "Class",
            "name": "ExprCheckHelper",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/ExprCheckHelper.java",
            "startLine": 43,
            "endLine": 670,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.Infer",
            "type": "Method",
            "name": "newContextFor",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/Infer.java",
            "startLine": 123,
            "endLine": 125,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.Infer",
            "type": "Method",
            "name": "newContextFor",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/Infer.java",
            "startLine": 123,
            "endLine": 125,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.Infer",
            "type": "Class",
            "name": "Infer",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/Infer.java",
            "startLine": 45,
            "endLine": 1048,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.Infer",
            "type": "Class",
            "name": "Infer",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/Infer.java",
            "startLine": 45,
            "endLine": 1052,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.InferenceContext",
            "type": "Method",
            "name": "InferenceContext",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/InferenceContext.java",
            "startLine": 67,
            "endLine": 97,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.InferenceContext",
            "type": "Method",
            "name": "InferenceContext",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/InferenceContext.java",
            "startLine": 67,
            "endLine": 85,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.InferenceContext",
            "type": "Class",
            "name": "InferenceContext",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/InferenceContext.java",
            "startLine": 42,
            "endLine": 487,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.types.internal.infer.InferenceContext",
            "type": "Class",
            "name": "InferenceContext",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/InferenceContext.java",
            "startLine": 42,
            "endLine": 522,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "package newContextFor(tvars List<JTypeVar>) : InferenceContext",
            "type": "Statement",
            "name": "return new InferenceContext(ts,supertypeCheckCache,tvars,LOG);\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/Infer.java",
            "startLine": 124,
            "endLine": 124,
            "startColumn": 9,
            "endColumn": 74
          },
          "rightSideLocation": {
            "container": "package newContextFor(tvars List<JTypeVar>, addPrimaryBound boolean) : InferenceContext",
            "type": "Statement",
            "name": "return new InferenceContext(ts,supertypeCheckCache,tvars,LOG,addPrimaryBound);\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/Infer.java",
            "startLine": 128,
            "endLine": 128,
            "startColumn": 9,
            "endColumn": 91
          },
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "container": "private groundTargetType(type JClassType, lambda LambdaExprMirror) : JClassType",
            "type": "Statement",
            "name": "return null;\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/ExprCheckHelper.java",
            "startLine": 588,
            "endLine": 588,
            "startColumn": 13,
            "endColumn": 25
          },
          "rightSideLocation": {
            "container": "private inferGroundTargetTypeForExplicitlyTypedLambda(targetType JClassType, lambda LambdaExprMirror) : JClassType",
            "type": "Statement",
            "name": "return null;\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/types/internal/infer/ExprCheckHelper.java",
            "startLine": 615,
            "endLine": 615,
            "startColumn": 13,
            "endColumn": 25
          },
          "validation": false
        }
      ],
      "baseline": []
    },
    {
      "repository": "https://github.com/pmd/pmd.git",
      "sha1": "ac21a1a8c5f6281ee51eff3cbc87a53e51023106",
      "url": "https://github.com/pmd/pmd/commit/ac21a1a8c5f6281ee51eff3cbc87a53e51023106",
      "commonMatching": [
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.rule.performance.BigIntegerInstantiationRule",
            "type": "Method",
            "name": "visit",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 34,
            "endLine": 59,
            "startColumn": 5,
            "endColumn": 6
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.rule.performance.BigIntegerInstantiationRule",
            "type": "Method",
            "name": "visit",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 34,
            "endLine": 76,
            "startColumn": 5,
            "endColumn": 6
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.rule.performance.BigIntegerInstantiationRule",
            "type": "Class",
            "name": "BigIntegerInstantiationRule",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 21,
            "endLine": 60,
            "startColumn": 0,
            "endColumn": 2
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.rule.performance.BigIntegerInstantiationRule",
            "type": "Class",
            "name": "BigIntegerInstantiationRule",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 20,
            "endLine": 77,
            "startColumn": 0,
            "endColumn": 2
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "Object constValue=firstArg.getConstValue();\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 47,
            "endLine": 47,
            "startColumn": 17,
            "endColumn": 62
          },
          "rightSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "Object constValue=arguments.get(0).getConstValue();\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 46,
            "endLine": 46,
            "startColumn": 9,
            "endColumn": 62
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "boolean jdk15=languageVersion.compareToVersion(\"1.5\") >= 0;\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 37,
            "endLine": 37,
            "startColumn": 9,
            "endColumn": 70
          },
          "rightSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "boolean java5=languageVersion.compareToVersion(\"1.5\") >= 0;\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 48,
            "endLine": 48,
            "startColumn": 9,
            "endColumn": 70
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "boolean jdk9=languageVersion.compareToVersion(\"9\") >= 0;\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 38,
            "endLine": 38,
            "startColumn": 9,
            "endColumn": 67
          },
          "rightSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "boolean java9=languageVersion.compareToVersion(\"9\") >= 0;\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 49,
            "endLine": 49,
            "startColumn": 9,
            "endColumn": 68
          },
          "validation": true
        }
      ],
      "ourApproach": [
        {
          "leftSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.rule.performance.BigIntegerInstantiationRule",
            "type": "Field",
            "name": "CONSTANTS",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 28,
            "endLine": 28,
            "startColumn": 38,
            "endColumn": 86
          },
          "rightSideLocation": {
            "container": "net.sourceforge.pmd.lang.java.rule.performance.BigIntegerInstantiationRule",
            "type": "Field",
            "name": "BIGDECIMAL_CONSTANTS",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 27,
            "endLine": 27,
            "startColumn": 38,
            "endColumn": 103
          },
          "validation": true
        },
        {
          "leftSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "asCtx(data).addViolation(node);\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 54,
            "endLine": 54,
            "startColumn": 21,
            "endColumn": 52
          },
          "rightSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "asCtx(data).addViolation(node);\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 55,
            "endLine": 55,
            "startColumn": 17,
            "endColumn": 48
          },
          "validation": false
        },
        {
          "leftSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "if(arguments.size() == 1)",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 44,
            "endLine": 56,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "if(TypeTestUtil.isA(BigInteger.class,node))",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 52,
            "endLine": 74,
            "startColumn": 9,
            "endColumn": 10
          },
          "validation": false
        },
        {
          "leftSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "if(CONSTANTS.contains(constValue) || jdk15 && \"10\".equals(constValue) || jdk9 && \"2\".equals(constValue) || Integer.valueOf(0).equals(constValue) || Integer.valueOf(1).equals(constValue) || jdk15 && Integer.valueOf(10).equals(constValue))",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 48,
            "endLine": 55,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "if(\"0\".equals(constValue) || \"1\".equals(constValue))",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 54,
            "endLine": 56,
            "startColumn": 13,
            "endColumn": 14
          },
          "validation": false
        }
      ],
      "baseline": [
        {
          "leftSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "asCtx(data).addViolation(node);\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 54,
            "endLine": 54,
            "startColumn": 21,
            "endColumn": 52
          },
          "rightSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "asCtx(data).addViolation(node);\n",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 72,
            "endLine": 72,
            "startColumn": 17,
            "endColumn": 48
          },
          "validation": false
        },
        {
          "leftSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "if(CONSTANTS.contains(constValue) || jdk15 && \"10\".equals(constValue) || jdk9 && \"2\".equals(constValue) || Integer.valueOf(0).equals(constValue) || Integer.valueOf(1).equals(constValue) || jdk15 && Integer.valueOf(10).equals(constValue))",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 48,
            "endLine": 55,
            "startColumn": 17,
            "endColumn": 18
          },
          "rightSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "if(java19 && \"2\".equals(String.valueOf(constValue)))",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 71,
            "endLine": 73,
            "startColumn": 13,
            "endColumn": 14
          },
          "validation": false
        },
        {
          "leftSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "if(arguments.size() == 1)",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 44,
            "endLine": 56,
            "startColumn": 13,
            "endColumn": 14
          },
          "rightSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "if(arguments.size() != 1)",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 40,
            "endLine": 43,
            "startColumn": 9,
            "endColumn": 10
          },
          "validation": false
        },
        {
          "leftSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "if(TypeTestUtil.isA(BigInteger.class,node) || jdk15 && TypeTestUtil.isA(BigDecimal.class,node))",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 40,
            "endLine": 57,
            "startColumn": 9,
            "endColumn": 10
          },
          "rightSideLocation": {
            "container": "public visit(node ASTConstructorCall, data Object) : Object",
            "type": "Statement",
            "name": "if(TypeTestUtil.isA(BigDecimal.class,node))",
            "filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/BigIntegerInstantiationRule.java",
            "startLine": 65,
            "endLine": 74,
            "startColumn": 16,
            "endColumn": 10
          },
          "validation": false
        }
      ]
    }
  ]
}